=======================
Installation via Docker
=======================

Kuma has experimental support for `Docker`_ as an alternative to the
Vagrant set up.

.. _Docker: https://www.docker.com/

Docker setup
============

#. Install the `Docker platform`_, following Docker's instructions for your
   operating system.

   .. _Docker platform: https://www.docker.com/products/overview

#. Clone the kuma Git repository, if you haven't already::

        git clone git@github.com:mozilla/kuma.git

#. Ensure you are in the existing or newly cloned kuma working copy::

        cd kuma

#. Pull the Docker images and build the containers::

        docker-compose pull
        docker-compose build

#. Start the containers in the background::

        docker-compose up -d

Provision the database
======================
There are two options for provisioning the database.  One option is to
initialize a new, empty database, and another is to restore an existing
database from a data dump.

Initialize a new database
-------------------------
To initialize a fresh database, run the migrations::

    docker exec -it kuma_web_1 ./manage.py migrate

It will run the standard Django migrations::

    Operations to perform:
      Synchronize unmigrated apps: allauth, humans, dashboards, statici18n, captcha, django_mysql, django_extensions, rest_framework, cacheback, dbgettext, django_jinja, flat, persona, staticfiles, landing, puente, sitemaps, github, pipeline, soapbox, messages, honeypot, constance
      Apply all migrations: wiki, core, account, tidings, attachments, database, admin, sessions, djcelery, search, auth, feeder, sites, contenttypes, taggit, users, waffle, authkeys, socialaccount
    Synchronizing apps without migrations:
      Creating tables...
    ... output truncated ...

The database will be populated with empty tables.

Restore an existing database
----------------------------
To restore a gzipped-database dump ``kuma.sql.gz``::

    docker exec -i kuma_web_1 bash -c "zcat | ./manage.py dbshell" < kuma.sql.gz

There will be no output until the database is loaded, which may take several
minutes depending on the size of the data dump.

This command can be adjusted to restore from an uncompressed database, or
directly from a ``mysqldump`` command.

Visit the Homepage
==================
Open the homepage at http://localhost:8000 . You've installed Kuma!

Coming Soon
===========
Docker support is experimental, so the full features of the Vagrant install are
not supported.  The next steps are enabling and documenting how to:

- Create an admin user
- Enable the wiki
- Enable KumaScript
- Enable GitHub Auth
- Troubleshoot install errors
- All the rest of the development and maintenance tasks

Interact with the Docker containers
===================================
The current directory is mounted as the ``/app`` folder in the web and worker
containers (``kuma_web_1`` and ``kuma_worker_1``).  Changes made to your local
directory are usually reflected in the running containers. To force the issue,
the container can be restarted::

    docker restart kuma_web_1 kuma_worker_1

You can connect to a running container to run commands. For example, you can
open an interactive shell in the web container::

    docker exec -it kuma_web_1 /bin/bash

To view the logs generated by a container::

    docker logs kuma_web_1

Or continuously view logs from all containers::

    docker-compose logs -f

To stop the containers::

    docker-compose stop

For further information, see the Docker documentation, such as the
`Docker Overview`_ and the documentation for your operating system.
You can try Docker's guided tutorials, and apply what you've learned on the
Kuma Docker environment.

.. _`Docker Overview`: https://docs.docker.com/engine/understanding-docker/
